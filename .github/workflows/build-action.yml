name: Build

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - "ubuntu-18.04"
          - "ubuntu-20.04"
          - "windows-latest"
    runs-on: ${{matrix.platform}}
    name: ${{matrix.platform}} build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Upgrade to Python 3.8 if required
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install unit testing framework and build command (dev only, not in requirements)
        run: pip install pytest-xdist pytest-mock pytest-asyncio build

      - name: Install deps
        run: pip install websockets

      - name: Generate distribution packages
        run: python -m build

      - name: Install local package
        run: pip install .

      - name: Run tests
        run: pytest -n auto tests

      - name: Create TLS certificate and private key
        run: >
          openssl req -batch -x509 -newkey rsa:2048
          -keyout localhost.key -out localhost.pem -nodes -days 1
          -subj "/CN=localhost"

      - name: Dry run
        run: python -m rptminigameshub 35550 localhost.pem localhost.key 2000 --dry-run
  publish: # If pushed on stable branch, then a new release has been done and must be published if all tests passed successfully
    if: endsWith(github.ref, 'stable') # Expects ref to be ref/heads/stable
    needs: build
    runs-on: ubuntu-latest
    name: Publish if it is a new release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate distribution packages
        run: python3 -m build

      - name: Publish built packaages
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{secrets.PYPI_API_TOKEN}}
